<?xml version="1.0" encoding="UTF-8"?>
<beans
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:context="http://www.springframework.org/schema/context"
        xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context.xsd">
    <!--配置整合mybatis过程-->
    <!--1：配置数据库相关参数
            通过${url}
    -->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!-- 2:数据库连接池-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!--配置连接池属性-->
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>

        <!--c3p0连接池的私有属性-->
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}"/>
        <property name="minPoolSize" value="${jdbc.minPoolSize}"/>
        <!--关闭连接后不自动commit-->
        <property name="autoCommitOnClose" value="${jdbc.autoCommitOnClose}"/>
        <!--获取连接超时-->
        <property name="checkoutTimeout" value="${jdbc.checkoutTimeout}"/>
        <!--当获取的连接失败时重试的次数-->
        <property name="acquireRetryAttempts" value="${jdbc.acquireRetryAttempts}"/>
    </bean>

    <!--约定大于配置-->
    <!--3：配置sqlsessionFactory对象-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--注入数据库连接池-->
        <property name="dataSource" ref="dataSource"/>
        <!--配置mybatis的全局配置文件：mybatis-config.xml-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!--扫描entity包，使用别名 如果有多个值则可以使用“分号”隔开 "org.lg.gz.seckill.entity0;org.lg.gz.seckill.entity1"-->
        <property name="typeAliasesPackage" value="org.lg.gz.seckill.entity"/>
        <!--扫描sql配置文件：mapper需要的xml文件-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>

    <!--4:配置扫描DAO接口包，目的：动态实现DAO接口，注入到spring容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 注入sqlsessionFactory，使用到时才开始实例化此属性 -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!--给出需要扫描DAO接口包-->
        <property name="basePackage" value="org.lg.gz.seckill.dao"/>
    </bean>

    <!-- RedisDao的注入，使用的是构造注入 -->
    <bean id="redisDao" class="org.lg.gz.seckill.dao.cache.RedisDao">
        <constructor-arg name="host" value="localhost"/>
        <constructor-arg name="port" value="6379"/>
    </bean>

</beans>